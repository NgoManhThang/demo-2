<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven validator="validator" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving
		up static resources in the ${webappRoot}/resources directory -->
	<!--
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/styles/**" location="/styles/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	-->
	<mvc:resources mapping="common/**" location="/common/" />
	<mvc:resources mapping="/css/**"    location="/css/" />
	<mvc:resources mapping="/fonts/**"  location="/fonts/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**"     location="/js/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources
		in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- ********************************************************************************************* -->
	<!-- コンポーネントスキャンの範囲指定 -->
	<context:component-scan base-package="com.itsol" />

	<!-- データソースの指定 -->
	<!--<jee:jndi-lookup id="dataSource" jndi-name="jdbc/charlie" />-->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/peims" />


	<!-- ********************************************************************************************* -->


	<!-- バリデータの設定 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- メッセージソースの設定 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>

	<!-- JdbcTemplate用のDI設定 ADD 20160616 t-nagase -->
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<!-- Name jdbc template -->
	<bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<!-- <bean id="charlieProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:charlie.properties</value>
			</list>
		</property>
	</bean> -->

	<!-- Hibernate用の設定 -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->
	<!-- <property name="dataSource" ref="dataSource" /> -->
	<!-- <property name="mappingResources"> -->
	<!-- <list> -->
	<!-- <value>hbm/Attend.hbm.xml</value> -->
	<!-- <value>hbm/Event.hbm.xml</value> -->
	<!-- <value>hbm/Group.hbm.xml</value> -->
	<!-- <value>hbm/Type.hbm.xml</value> -->
	<!-- <value>hbm/User.hbm.xml</value> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- <property name="hibernateProperties"> -->
	<!-- <props> -->
	<!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop> -->
	<!-- <prop key="hibernate.show_sql">true</prop> -->
	<!-- <prop key="hibernate.format_sql">true</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->
	<!-- <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> -->
	<!-- <property name="sessionFactory" ref="sessionFactory" /> -->
	<!-- </bean> -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />

</beans>
